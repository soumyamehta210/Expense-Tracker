{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/NewExpenseItem.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","console","log","ExpensesChart","chartDataPoints","expenses","getMonth","NewExpenseItem","useState","enteredFilter","setEnteredFilter","newArr","filter","toString","data","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DummyExpenses","App","SetExpenses","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9a695db.chunk.js","sourcesContent":["import './Card.css';\n\nfunction Card(props){\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import './ExpenseDate.css'\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React, { useState } from \"react\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date}></ExpenseDate>\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const filterChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={filterChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  if(props.items.length === 0){\n      return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>\n  }\n\n  return <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ))}\n  </ul>\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n\n  // dataPointValues is an array of 12 values so using spread operator we convert it into a list of arguments because max function takes a list of arguments\n  const totalMax = Math.max(...dataPointValues);\n  console.log(totalMax);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => {\n        return <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />;\n      })}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        {label: \"Jan\", value: 0},\n        {label: \"Feb\", value: 0},\n        {label: \"Mar\", value: 0},\n        {label: \"Apr\", value: 0},\n        {label: \"May\", value: 0},\n        {label: \"Jun\", value: 0},\n        {label: \"Jul\", value: 0},\n        {label: \"Aug\", value: 0},\n        {label: \"Sep\", value: 0},\n        {label: \"Oct\", value: 0},\n        {label: \"Nov\", value: 0},\n        {label: \"Dec\", value: 0}\n    ];\n\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints}></Chart>\n}\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./NewExpenseItem.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction NewExpenseItem(props) {\n  const [enteredFilter, setEnteredFilter] = useState(\"2020\");\n\n  const filterChangeHandler = (data) => {\n    setEnteredFilter(data);\n  };\n\n  const newArr = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === enteredFilter;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={enteredFilter}\n          onChangeFilter={filterChangeHandler}\n        ></ExpensesFilter>\n        <ExpensesChart expenses={newArr}></ExpensesChart>\n        <ExpensesList items={newArr}></ExpensesList>\n      </Card>\n    </div>\n  );\n}\n\nexport default NewExpenseItem;\n","import React, { useState } from \"react\";\nimport App from \"../../App\";\nimport \"./ExpenseForm.css\";\nimport NewExpense from \"./NewExpense\";\n\nconst ExpenseForm = (props) => {\n  // Empty string is assigned to the enteredTitle using the useState('')\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //   Combining all three States into one by making an object of useState\n\n  // we need to make sure that the values that we are not changing does not get lost so we need to make a copy of other two values so we write the spread operator.\n\n  //   const [userInput, setUserInput] = useState({\n  //       enteredTitle: '',\n  //       enteredAmount: '',\n  //       enteredDate: ''\n  //   })\n\n  //   const titleChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         enteredTitle: event.target.value,\n  //       };\n  //     });\n  //   };\n\n  //   const amountChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         enteredAmount: event.target.value,\n  //       };\n  //     });\n  //   };\n\n  //   const dateChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         enteredDate: event.target.value,\n  //       };\n  //     });\n  //   };\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    // combining all the values in an object that are updated that is user entered value in form\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    console.log(expenseData);\n\n    // now we have to pass this object to the App.js where we have expenses array\n\n    // to pass expenseData Object to app.js first of all we need to pass it to the NewExpense.js\n\n    props.onSaveExpenseData(expenseData);\n\n    // emptying the form inputs after submitting form\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler} className=\"form\">\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          ></input>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n          ></input>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            value={enteredDate}\n            onChange={dateChangeHandler}\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n          ></input>\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useState } from \"react\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    // enteredExpenseData will be the object that has title, amount and date entered by user but we also want to add another property that is id so we can do this by using spread operator\n\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    // console.log(expenseData);\n\n    props.onAddExpense(expenseData);\n\n    // to close the form once it is submitted\n    setIsEditing(false);\n  };\n\n  const clickHandler = () => {\n    setIsEditing(true);\n  };\n\n  const cancelHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {/* //     ExpenseForm ma as a prop pass kariye che aapde ek function jene aapde ExpenseForm ma call kari shakisu ane aa saveExpenseDataHandler ek parameter mangse je aapdo object hase user ae enter karelo*/}\n\n      {/* if isEditing is false then display button */}\n      {!isEditing && (\n        <button type=\"submit\" onClick={clickHandler}>\n          Add New Expense\n        </button>\n      )}\n\n      {/* if isEditing is true display form */}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={cancelHandler}\n        ></ExpenseForm>\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import ExpenseItem from \"./components/Expenses/ExpenseItem\";\nimport React, {useState} from \"react\";\nimport NewExpenseItem from \"./components/Expenses/NewExpenseItem\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, SetExpenses] = useState(DummyExpenses);\n\n  const addExpenseHandler = (expense) => {  \n    SetExpenses((prevState) => {\n      return [...prevState, expense];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <NewExpenseItem items={expenses}></NewExpenseItem>\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}